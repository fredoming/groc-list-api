// <auto-generated />
using System;
using GroceryListAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GroceryListAPI.Migrations
{
    [DbContext(typeof(GroceryListDbContext))]
    [Migration("20220427231113_FixFkGrocList")]
    partial class FixFkGrocList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GroceryListAPI.Infrastructure.Database.GroceryItem", b =>
                {
                    b.Property<Guid>("GroceryItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("grocery_item_id");

                    b.Property<string>("CreatedById")
                        .HasColumnType("text")
                        .HasColumnName("created_by_id");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("text")
                        .HasColumnName("created_by_name");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_dt");

                    b.Property<bool>("DoneTF")
                        .HasColumnType("boolean")
                        .HasColumnName("done_tf");

                    b.Property<string>("ItemName")
                        .HasColumnType("text")
                        .HasColumnName("item_name");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_id");

                    b.Property<string>("LastModifiedByName")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_name");

                    b.Property<DateTime>("LastModifiedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified_dt");

                    b.HasKey("GroceryItemId")
                        .HasName("pk_grocery_items");

                    b.ToTable("grocery_items");
                });

            modelBuilder.Entity("GroceryListAPI.Infrastructure.Database.GroceryList", b =>
                {
                    b.Property<Guid>("GroceryListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("grocery_list_id");

                    b.Property<string>("CreatedById")
                        .HasColumnType("text")
                        .HasColumnName("created_by_id");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("text")
                        .HasColumnName("created_by_name");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_dt");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_id");

                    b.Property<string>("LastModifiedByName")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_name");

                    b.Property<DateTime>("LastModifiedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified_dt");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("GroceryListId")
                        .HasName("pk_grocery_lists");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_grocery_lists_user_id");

                    b.ToTable("grocery_lists");
                });

            modelBuilder.Entity("GroceryListAPI.Infrastructure.Database.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("CreatedById")
                        .HasColumnType("text")
                        .HasColumnName("created_by_id");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("text")
                        .HasColumnName("created_by_name");

                    b.Property<DateTime>("CreatedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_dt");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_id");

                    b.Property<string>("LastModifiedByName")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by_name");

                    b.Property<DateTime>("LastModifiedDT")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified_dt");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middle_name");

                    b.Property<string>("UserNameEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name_email");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("GroceryListAPI.Infrastructure.Database.GroceryList", b =>
                {
                    b.HasOne("GroceryListAPI.Infrastructure.Database.User", null)
                        .WithMany("Lists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_grocery_lists_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroceryListAPI.Infrastructure.Database.User", b =>
                {
                    b.Navigation("Lists");
                });
#pragma warning restore 612, 618
        }
    }
}
